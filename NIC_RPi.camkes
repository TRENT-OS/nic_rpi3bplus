/*
 * NIC_RPi CAmkES Component
 *
 * Copyright (C) 2020-2021, HENSOLDT Cyber GmbH
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * to be used as:
 *
 *   #include "NIC_RPI/NIC_RPi.camkes"
 *   NIC_RPi_Mailbox_COMPONENT_DEFINE(NIC_RPi_Mailbox)
 *   NIC_RPi_USB_COMPONENT_DEFINE(NIC_RPi_USB)
 *   NIC_RPi_COMPONENT_DEFINE(NIC_RPI, 4096)
 *
 */

#pragma once

import <std_connector.camkes>;
#include <if_OS_Nic.camkes>
import <if_OS_Timer.camkes>;


//------------------------------------------------------------------------------


#define NIC_RPI_MAILBOX_BCM2837_DATAPORT_PADDR  0x3F00B000
#define NIC_RPI_MAILBOX_BCM2837_DATAPORT_SIZE   0x1000

#define NIC_RPI_USB_BCM2837_DATAPORT_PADDR      0x3F980000
#define NIC_RPI_USB_BCM2837_DATAPORT_SIZE       0x1000
#define NIC_RPI_USB_BCM2837_IRQ                 73


//------------------------------------------------------------------------------


/*
 * Declare the NIC_RPI Mailbox HW component:
 *
 *      NIC_RPi_Mailbox_COMPONENT_DEFINE(
 *          <name>
 *      )
 */
#define NIC_RPi_Mailbox_COMPONENT_DEFINE( \
    _name_) \
    \
    component _name_ { \
        hardware; \
        dataport Buf mailboxBaseReg; \
    }


/*
 * Declare the NIC_RPI USB HW component:
 *
 *      NIC_RPi_USB_COMPONENT_DEFINE(
 *          <name>
 *      )
 */
#define NIC_RPi_USB_COMPONENT_DEFINE( \
    _name_) \
    \
    component _name_ { \
        hardware; \
        dataport Buf usbBaseReg; \
        emits DataAvailable usbBaseIrq; \
    }


/*
 * Declare the NIC_RPI driver component:
 *
 *      NIC_RPi_COMPONENT_DEFINE(
 *          <name>
 *      )
 */
#define NIC_RPi_COMPONENT_DEFINE( \
    _name_, \
    _ringbuffer_size_) \
    \
    component _name_ { \
        control; \
        has semaphore nic_driver_init_done; \
        has binary_semaphore nic_init_transfer; \
        \
        /* lower interface to USB ------------------------------------- */ \
        dataport Buf mailboxBaseReg; \
        dataport Buf usbBaseReg; \
        consumes DataAvailable usbBaseIrq; \
        \
        /* provide NIC Driver interface ------------------------------- */ \
        IF_OS_NIC_PROVIDE(nic, _ringbuffer_size_) \
        \
        /* usage of Timer ---------------------------------- */ \
        uses if_OS_Timer timeServer_rpc; \
        consumes TimerReady timeServer_notify; \
    }


//------------------------------------------------------------------------------


/*
 * Connect a NIC_RPI driver instance to the two HW instances.
 *
 *      NIC_RPi_INSTANCE_CONNECT(
 *          <nic>,
 *          <mailbox>,
 *          <usb>
 *      )
 */
#define NIC_RPi_INSTANCE_CONNECT( \
    _inst_, \
    _inst_mb_, \
    _inst_usb_) \
    \
    connection  seL4HardwareMMIO \
        _inst_ ## _inst_mb_ ## _mmio( \
            from _inst_.mailboxBaseReg, \
            to   _inst_mb_.mailboxBaseReg \
        ); \
    \
    connection  seL4HardwareMMIO \
        _inst_ ## _inst_usb_ ## _mmio( \
            from _inst_.usbBaseReg, \
            to   _inst_usb_.usbBaseReg \
        ); \
    \
    connection  seL4HardwareInterrupt \
        _inst_ ## _inst_usb_ ## _irq( \
            from _inst_usb_.usbBaseIrq, \
            to   _inst_.usbBaseIrq \
        );


//------------------------------------------------------------------------------


/*
 * Let NIC_RPi_Mailbox configure itself:
 *
 *      NIC_RPi_Mailbox_INSTANCE_CONFIGURE_SELF(
 *          <instance>
 *      )
 *
 * NOTE: mailbox memory base register and size (the actual mailbox base address
 *       is 0x3F00B880 but when mapping the base address has to be PAGE_SIZE
 *       aligned.
 */
#define NIC_RPi_Mailbox_INSTANCE_CONFIGURE_SELF( \
    _inst_) \
    \
    _inst_.mailboxBaseReg_paddr  = NIC_RPI_MAILBOX_BCM2837_DATAPORT_PADDR; \
    _inst_.mailboxBaseReg_size   = NIC_RPI_MAILBOX_BCM2837_DATAPORT_SIZE;


/*
 * Let NIC_RPi_USB configure itself:
 *
 *      NIC_RPi_USB_INSTANCE_CONFIGURE_SELF(
 *          <instance>
 *      )
 *
 * NOTE: USB interrupt is marked as 9, but according to line to the seL4 BCM2837
 *       interrupt handling, the normal IRQs start from 64 => 64 + 9 = 73.
 */
#define NIC_RPi_USB_INSTANCE_CONFIGURE_SELF( \
    _inst_) \
    \
    _inst_.usbBaseReg_paddr      = NIC_RPI_USB_BCM2837_DATAPORT_PADDR; \
    _inst_.usbBaseReg_size       = NIC_RPI_USB_BCM2837_DATAPORT_SIZE; \
    _inst_.usbBaseIrq_irq_number = NIC_RPI_USB_BCM2837_IRQ;


/*
 * Configure the memory region of NIC driver, this is used to dynamically
 * allocate memory chunks for dma usage.
 *
 *      NIC_RPi_INSTANCE_CONFIGURE(
 *          <instance>,
 *          <size>
 *      )
 */
#define NIC_RPi_INSTANCE_CONFIGURE( \
    _inst_, \
    _dma_size_) \
    \
    _inst_.dma_pool                     = _dma_size_; \
    _inst_.nic_driver_init_done_value   = 0; \
    _inst_.nic_init_transfer_value      = 1;
